# Display largest files/directories
# ds
# ds -[fdt]

[[ $1 == -h || $1 == --help ]] && {
cat << HELP
Usage:
ds
ds -[fdt] (files, directories, total)
HELP
return 0
}

# Files
if (($# == 0)) || [[ -d $1 ]] || { [[ $1 == -f ]] && [[ -d $2 || -z $2 ]]; }
then
   if [[ $1 != -f ]]
   then
      local start=${1:-.}
   else
      local start=${2:-.}
   fi

   local file
   local -a files
   while read -r _ file
   do
      files+=($file)
   done < <(find $start -xdev \( -name .git -o -path '*vendor/bundle' -o -path '*shared/bundle' \) -prune -o -type f -printf '%p\0' | xargs -0 du -h | sort -hr | head -n15)

   if [[ -n $files ]]
   then
      llk --color -- ${files#./} | tee /tmp/ds_files
   else
      return 1
   fi
fi

# Directories
if (($# == 0)) || [[ -d $1 ]] || { [[ $1 == -d ]] && [[ -d $2 || -z $2 ]]; }
then
   if [[ $1 != -d ]]
   then
      local start=${1:-.}
   else
      local start=${2:-.}
   fi

   { (($# == 0)) || [[ -d $1 ]]; } && echo

   local size folder
   while read -r size folder
   do
      echo -n "$size "
      ls -d --color -- ${folder#./}
   done < <(du -xh $start | sort -hr | head -n15) | tee /tmp/ds_dirs
fi

# Folder total
if [[ $1 == -t ]] && [[ -d $2 || -z $2 ]]
then
   du -sxh --time --time-style=+'%d-%b-%y %H:%M' ${2:-.}
fi
