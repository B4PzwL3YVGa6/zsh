# ds
# ds -[fdt]

(($# == 1)) && { [[ $1 == -[fdt] || -d $1 ]] || return 1; }
(($# == 2)) && { [[ $1 == -[fdt] && -d $2 ]] || return 2; }
(($# < 3)) || return 3

TRAPINT() { unfunction ds_files ds_dirs ds_clean 2>/dev/null; return 4; }

ds_files() {
   local file
   local -a files
   while read -r _ file
   do
      files+=($file)
   done < <(find ${1:-.} -xdev -name .git -prune -o -type f -printf '%p\0' | xargs -0 du -h | sort -hr | head -n15)
   ls -FBShl --color --time-style='+%d-%b-%y %H:%M' -- ${files#./} | tee /tmp/ds_files
}

ds_dirs() {
   local size folder
   while read -r size folder
   do
      echo -n "$size "
      ls -d --color -- ${folder#./}
   done < <(du -xh --exclude=.git ${1:-.} | sort -hr | head -n15) | tee /tmp/ds_dirs
}

ds_clean() {
   unfunction ds_files ds_dirs
}

if (($# == 0)) || [[ $1 != -? ]]
then
   ds_files $1; echo
   ds_dirs  $1
   ds_clean; unfunction ds_clean; return 0
fi

OPTIND=1

local opt
while getopts ':fdt' opt
do
   case $opt in
      (f) ds_files $2 ;;
      (d) ds_dirs  $2 ;;
      (t) du -sxh --time --time-style=+'%d-%b-%y %H:%M' ${2:-.} ;;
      (\?)
         echo "Invalid option: -$OPTARG" >&2
         ds_clean; unfunction ds_clean; return 5 ;;
   esac
done

shift $((OPTIND-1))

ds_clean; unfunction ds_clean
