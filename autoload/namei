# namei command for Mac OS
# Usage: namei {path}

if [[ $(uname) != Darwin ]] && (( $+commands[namei] ))
then
   if command namei -l / 2>/dev/null
   then
      command namei $@
      return
   fi
fi

if [[ $(uname) != Darwin ]]
then
   if (( ! $+commands[namei] ))
   then
      print -P '%F{red}namei not installed. switching to the namei function...%f'
   else
      print -P '%F{red}old version of namei detected. switching to the namei function...%f'
   fi
fi

if [[ $1 == (-h|--help) ]]
then
   echo 'Usage: namei {path}'
   return
fi

local o

# ignore options
for o in $@
do
   if [[ $o == -[lmonvxV] || $o == --(long|modes|owners|nosymlinks|vertical|mountpoints|version) ]]
   then
      shift
   else
      # deal with cases such as: namei {path} -l
      # instead of throwing an error about '-l' not existing
      break
   fi
done

local inode
local inodes

# get absolute path, then split on /s
if (( $+commands[realpath] ))
then
   inode=$(realpath -e -- ${1:-.})
else
   inode=$(readlink -f -- ${1:-.})
fi
inodes=(${(s./.)inode})

[[ -n $inodes ]] || return 1

local i ii

# print
if [[ $(uname) == *BSD ]]
then
   stat -f '%Sp %Su %Sg %SN' /
else
   stat -c '%A %U %G %n' /
fi

for i in $inodes
do
   ii=$ii/$i

   if [[ $(uname) == *BSD ]]
   then
      stat -n -f '%Sp %Su %Sg' -- $ii
   else
      stat --printf '%A %U %G' -- $ii
   fi

   # print with colors
   # no need to test for links as the path has been resolved
   if [[ -d $ii ]]
   then
      print -lP -- " %F{69}${ii##*/}%f"
   else
      if [[ $(uname) == *BSD ]]
      then
         print -l -- " ${ii##*/}"
      else
         (cd ${ii%/*} && { echo -n ' '; ls -1 --color=auto ${ii##*/} })
      fi
   fi
done
