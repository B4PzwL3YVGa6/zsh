# AUR packages management
#
# Update a package
# Install a package downloaded in ~/Downloads
#
# Usage:
#    aur -u {package}
#
#    OR
#
#    aur
#    aur -d (install as a dependence)
#
# Run as root

(
setopt extended_glob

## Colors
_red="$(tput setaf 1 || tput AF 1)"
_res="$(tput sgr0 || tput me)"

## Help
_help() {
local info
read -r -d $'\0' info << 'HELP'
Usage:
   aur -u {package}

   OR

   aur
   aur -d (install as a dependence)
HELP
if (($1 == 0))
then echo $info
else echo $info >&2
fi
exit $1
}

## Checks
[[ $1 == (-h|--help) ]] && _help 0

# Arguments
if (($# > 2))
then
   echo "${_red}Wrong number of arguments$_res!" >&2
   _help 1
fi

# Don't update my cd bookmarks for automated cds
chpwd_functions=()

cd /usr/local/src || return 1

# Update a package
if [[ $1 == *u ]]
then
   if cd $2
   then
      makepkg -s
      sudo pacman -U *.pkg.tar.xz(om[1])

      # Cleanup: leave the 2 most recent images only
      rm *.pkg.tar.xz(Om[1,-3])
   fi

# Install a package
else
   _user=mitko
   downloads=/home/$_user/Downloads

   local -a opts
   opts=($downloads/*.tar.gz(om))
   [[ -n $opts ]] || { echo 'no archive found. exiting...' 1>&2; exit 2 }

   opts=(${opts##*/})
   # select a recently downloaded tar
   select choice in ${opts[1,3]}
   do
      case $choice in
         (*) pkg=$choice; break;;
      esac
   done

   rsync -aiP $downloads/$pkg .

   if tar zxf $pkg
   then
      rm $pkg
   fi

   chown -R $_user:$_user ${pkg%%.*}

   if cd ${pkg%%.*}
   then
      if sudo -u$_user makepkg -s
      then
         if [[ $1 == *d ]]
         then
            pacman --asdeps -U ${pkg%%.*}*.tar.xz
         else
            pacman -U ${pkg%%.*}*.tar.xz
         fi
         rm $downloads/$pkg
      fi
   fi
fi
)
